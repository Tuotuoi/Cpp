/*************************************************************************
	> File Name: 19.5类运算符重载.cpp
	> Author: LuoJinXv 
	> Mail: m18999624868_1@163.com 
	> Created Time: 2020年08月01日 星期六 08时46分43秒
 ************************************************************************/

#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cstdlib>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <string>

using namespace std;
/* 1.map 
 *
   (1) = 赋值运算符。将map中原来的元素全部清空后，然后将x中的元素拷贝到map中。
   (2)[] 返回对该值的引用，该值映射到一个等效于的键key，如果该键尚不存在，则执行插入。
         当该操作作为右值的时候，会得到该键值对应的值。当该操作作为左值的时候，
         如果要插入的键不存在，则会将新的键值对插入到map中。如果插入的键存在，则会修改键所对应的值。
   (3) ==,!=,<,<=,>,>=,<=>

 * 2.vector
 * （1）=
 * （2）[]
 * （3）>= == <= != 
 *
 * 3.string 
 * (1) =
 * (2) == != 
 * (3) +
 * (4) << >>
 *
 * 4.stack 
 * (1）= 复制分配运算符。 用其他内容替换内容。调用c = other.c;。 （隐式声明）
   (2）= 移动分配运算符。 使用移动语义将内容替换为其他内容。c = std :: move（other.c）; （隐式声明
 * (3) ==,!=,<,<=,>,>=,<=> 比较两个容器适配器的基础容器的内容。 通过将相应的运算符应用于基础容器来完成比较。
 *
 *
 * 5.set
 * (1) += -= <=
 * (2) & |
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 * */
